@startuml
actor "Validator" as validator
actor "Master Contract" as master
database "Staking pool" as pool
group get mbr data
validator -> master: [SIMULATE] getMbrAmounts()(uint64,uint64,uint64)
master->validator: returns MBRs to add Validator, new Pool, new first-time Staker
end
group Add self as new validator
autonumber 0
validator -> master: [payment of Validator MBR for new validator]
validator -> master: addValidator(mbrPayment: PayTxn, owner: Address, manager: Address, nfdAppID: uint64, config: ValidatorConfig): uint64
autonumber stop
master -> validator: initializes new validator record, returns validator ID
end
group Add pool for validator
'note left: add new validator
autonumber 0
validator -> master: [payment of mbr for new pool]
validator -> master: addPool(mbrPayment: PayTxn, validatorID: ValidatorID): ValidatorPoolKey
autonumber stop
master -> pool: creates new staking pool contract instance
master -> validator: returns {Validator ID, Pool ID, Pool App ID}
end
@enduml
